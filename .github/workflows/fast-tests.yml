name: Fast Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  fast-tests:
    name: Fast Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Build fast tests
      run: cargo test --test fast_transaction_tests --no-run
    
    - name: Run fast transaction tests
      run: cargo test --test fast_transaction_tests --verbose
      timeout-minutes: 2
    
    - name: Run simple mock tests
      run: cargo test --test simple_mock_test --verbose
      timeout-minutes: 1
    
    - name: Run mock helper tests
      run: cargo test --test mock_test_helpers --verbose
      timeout-minutes: 1

  performance-check:
    name: Performance Regression Check
    runs-on: ubuntu-latest
    needs: fast-tests
    timeout-minutes: 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Run performance comparison test
      run: cargo test --test fast_transaction_tests test_performance_comparison --verbose -- --nocapture
      timeout-minutes: 3
    
    - name: Check test execution time
      run: |
        echo "Verifying fast tests complete within expected timeframes..."
        time cargo test --test fast_transaction_tests --quiet
        echo "Fast test suite completed successfully!"