name: Build Qanto Documentation

on:
  push:
    branches: [ main ]
    paths: 
      - 'qanto-docs/**'
      - '.github/workflows/deploy-docs.yml'
  pull_request:
    branches: [ main ]
    paths: 
      - 'qanto-docs/**'
  workflow_dispatch:

# Allow only one concurrent build
concurrency:
  group: "docs-build-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    outputs:
      build-artifact: ${{ steps.upload.outputs.artifact-id }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for git history for lastmod dates
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: qanto-docs/package-lock.json
      
      - name: Install dependencies
        working-directory: ./qanto-docs
        run: npm ci
      
      - name: Build Docusaurus site
        working-directory: ./qanto-docs
        run: |
          npm run build
          
          # Add version information
          echo "Built on $(date)" > build/BUILD_INFO.txt
          echo "Git commit: ${{ github.sha }}" >> build/BUILD_INFO.txt
          echo "Git ref: ${{ github.ref }}" >> build/BUILD_INFO.txt
          echo "Workflow: ${{ github.workflow }}" >> build/BUILD_INFO.txt
          
      - name: Run tests
        working-directory: ./qanto-docs
        run: |
          # Test that critical pages exist
          test -f build/index.html
          test -f build/introduction/what-is-qanto/index.html
          test -f build/api/introduction/index.html
          
          # Test that assets are properly generated
          test -d build/assets
          
          # Validate HTML structure (basic checks)
          if command -v htmlproofer &> /dev/null; then
            htmlproofer build --disable-external --check-html --check-img-http
          else
            echo "Skipping HTML validation (htmlproofer not available)"
          fi
      
      - name: Upload build artifacts
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: docusaurus-build-${{ github.sha }}
          path: qanto-docs/build/
          retention-days: 30

  # Comment on PR with build info
  comment-pr:
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('📝 Documentation Build')
            );
            
            const body = `## 📝 Documentation Build
            
            Your documentation changes have been built successfully!
            
            📊 **Build Info**:
            - Commit: \`${{ github.sha }}\`
            - Build Time: \`$(date -u)\`
            - Workflow: [\`${{ github.run_id }}\`](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            The build artifacts are ready for deployment to NameCheap hosting.`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

  # Notify build completion
  notify-build:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Send Slack notification
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#infrastructure'
          author_name: 'GitHub Actions'
          title: 'Qanto Docs Build'
          message: |
            Documentation build ${{ job.status }}
            
            🔗 Commit: ${{ github.sha }}
            👤 Author: ${{ github.actor }}
            📦 Build artifacts ready for NameCheap deployment
            
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
