# .cargo/config.toml

# ===================================================================
# Qanto Project :: Workspace Cargo Configuration
# ===================================================================
# This file centralizes build configurations for all crates in the workspace,
# ensuring consistency and enabling powerful optimizations for release builds.

# --- Build Optimizations ---
[build]
rustflags = ["-C", "target-cpu=native"]
incremental = false

# --- Release Profile Overrides ---
[profile.release]
opt-level = 3           # The highest level of optimization.
lto = "thin"            # Enables "Thin" Link-Time Optimization for whole-program optimization with good compile times.
codegen-units = 1       # Use a single codegen unit to maximize optimization potential.
panic = "abort"         # Abort on panic for smaller and faster binaries.
strip = true            # Remove debugging symbols from the final binary to reduce its size.

# --- Cross-Compilation Target ---
[target.x86_64-unknown-linux-gnu]
linker = "x86_64-linux-gnu-gcc"

# --- Global Environment ---
[env]
# Increase stack size for Rust-created threads to avoid intermittent stack overflows
# observed under default settings during crypto-heavy tests and background tasks.
# 16 MiB proved stable in repeated runs.
RUST_MIN_STACK = "16777216"

# --- Developer Experience Aliases ---
[alias]
b = "build"
br = "build --release"
c = "check"
t = "test"
r = "run"
rr = "run --release"
lint = "clippy -- -D warnings" # Run clippy and treat all warnings as errors.