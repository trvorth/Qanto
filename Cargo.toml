cargo-features = ["profile-rustflags"]

[package]
name = "qanto"
version = "0.1.0"
edition = "2021"
authors = ["Trevor <trvorth@gmail.com>"]
description = "Layer-0 blockchain featuring a DAG with hybrid consensus, governed by its SAGA AI for dynamic network optimization and unprecedented scalability"
license = "MIT"
repository = "https://github.com/trvorth/qanto"

[workspace]
resolver = "2"
members = [
    ".",
    "myblockchain",
    "tools/relayer"
]

# Force secure versions to override transitive dependencies
[workspace.dependencies]
tracing-subscriber = { version = "0.3.20", features = ["env-filter"] }

# Override vulnerable dependencies
[patch.crates-io]
# Replace derivative with synstructure for arkworks compatibility
derivative = { git = "https://github.com/mcarton/rust-derivative", branch = "master" }
# Force secure tracing-subscriber version for all transitive dependencies
tracing-subscriber = { git = "https://github.com/tokio-rs/tracing", tag = "tracing-subscriber-0.3.20" }

[dependencies]
# --- Homomorphic Encryption (Updated for security) ---
# libpaillier = "0.7.0-rc0" # Replaced with maintained alternative
# paillier = "0.2.0" # Temporarily disabled due to ring 0.13.5 security vulnerability
# TODO: Replace with secure homomorphic encryption implementation
# ed25519-dalek = "2.1.0" # Replaced with qanto_compat
tfhe = { version = "0.10", features = ["boolean", "shortint", "integer"] }
libp2p = { version = "0.56.0", features = ["gossipsub", "kad", "mdns", "noise", "yamux", "tcp", "tokio", "macros"] }

# --- SAGA Analytics (AI dependencies removed for production hardening) ---
# Removed: tch (PyTorch), ndarray for memory optimization

# --- Core Blockchain & Networking (Qanto-Native) ---
my-blockchain = { path = "myblockchain", features = ["zk"] }
futures = "0.3.30"
tokio = { version = "1.38.0", features = ["full", "rt-multi-thread", "time"] }
tokio-stream = { version = "0.1", features = ["sync"] }
anyhow = "1.0.86"
async-graphql = { version = "7.0", features = ["uuid", "chrono"] }
async-graphql-axum = "7.0.11"

# --- Web Server & API (UNIFIED VERSIONS - DEDUPLICATION COMPLETE) ---
axum = { version = "0.8.4", features = ["macros", "ws", "json"] }
tower-http = { version = "0.6.2", features = ["cors"] }  # For CORS middleware
reqwest = { version = "0.12.5", features = ["json"] }
hyper = { version = "1.3.1", features = ["full"] }
# REMOVED: warp = "0.3.7" - Duplicate web server framework, using axum only

# --- Cryptography & Security (Qanto-Native) ---
getrandom = { version = "0.2", features = ["js"] }
ahash = "0.8.12"
secrecy = { version = "0.8", features = ["serde"] }
bincode = "1.3.3"
argon2 = { version = "0.5.3", features = ["alloc"] }
aes-gcm = "0.10.3"
bip39 = "2.1.0"
hex = "0.4.3"
rand = "0.8.5"
rand_core = { version = "0.6.4", features = ["std"] }
zeroize = { version = "1.7.0", features = ["zeroize_derive"] }
subtle = "2.5.0"
generic-array = "0.14.7"
typenum = "1.17"
password-hash = { version = "0.5.0", features = ["std"] }

# --- Data Handling & Serialization ---
serde = { version = "1.0.203", features = ["derive"] }
serde_json = "1.0.117"
toml = "0.8.14"
lru = "0.12.3"
prometheus = { version = "0.13.4", default-features = false, features = ["process"] }
lazy_static = "1.5.0"
once_cell = "1.19.0"
dashmap = "5.5.3"
crossbeam = "0.8.4"
crossbeam-channel = "0.5.13"
crossbeam-utils = "0.8.20"
parking_lot = "0.12.3"
regex = "1.10.5"
url = "2.5.2"
uuid = { version = "1.8.0", features = ["v4", "serde"] } # For NEURAL-VAULT GATT
chrono = { version = "0.4.38", features = ["serde"] }
sysinfo = "0.30.13"
rayon = "1.10.0"
bytes = "1.6.0"
num-bigint = "0.4.4"
num-traits = "0.2.17"

# --- Error Handling & CLI (UNIFIED VERSIONS) ---
thiserror = "1.0.69"  # Unified to latest stable version
clap = { version = "4.5.4", features = ["derive"] }
log = "0.4.21"
env_logger = "0.11.3"
tracing = "0.1.40"
# Force secure version to override arkworks dependency
tracing-subscriber = { workspace = true }

# --- Rate Limiting & Backoff ---
governor = "0.6.3"
nonzero_ext = "0.3.0"

# --- Environment & Secrets ---
dotenvy = "0.15.7"
rpassword = "7.3.1"
colored = "2.0"
libc = "0.2.155"

# --- Async Traits ---
async-trait = "0.1.80"
tokio-util = { version = "0.7.11", features = ["compat"] }

# --- Signal Handling ---
signal-hook = "0.3.17"

# --- Optional Dependencies for ZK proofs & GPU ---
bellman = { version = "0.14.0", optional = true }
bls12_381 = { version = "0.8.0", optional = true }
ff = { version = "0.13.0", optional = true }
ocl = { version = "0.19.7", optional = true }
num_cpus = "1.16.0"
futures-util = { version = "0.3.31", features = ["sink"] }

# --- Arkworks ZK Dependencies (Updated for security) ---
ark-groth16 = "0.5.0"
ark-bls12-381 = "0.5.0"
ark-ff = "0.5.0"
ark-ec = "0.5.0"
ark-std = "0.5.0"
ark-relations = { version = "0.5.1", default-features = false, features = [] }
ark-r1cs-std = "0.5.0"
ark-crypto-primitives = { version = "0.5.0", features = ["sponge", "r1cs", "crh"] }
ark-serialize = "0.5.0"
ark-snark = "0.5.0"

# --- Post-Quantum Cryptography Dependencies (Replaced with Qanhash) ---
ring = "0.17.8"
# p256 = "0.13.2" # Replaced with qanto_compat
# pqc_dilithium = { version = "0.2.0", features = ["mode5"] } # Replaced with qanto_compat

[build-dependencies]
tonic-build = { version = "0.11.0", features = ["prost"] }

[dev-dependencies]
tempfile = "3.10.1"
serial_test = "2.0.0"


[features]
default = []
gpu = ["ocl", "my-blockchain/gpu"]
zk = ["bellman", "bls12_381", "ff"]
# ai feature removed for production hardening
infinite-strata = []
performance-test = []

# --- Main Library Definition ---
[lib]
name = "qanto"
path = "src/lib.rs"

# --- Main Executable Binaries ---
[[bin]]
name = "qanto"
path = "src/bin/qanto.rs"

[[bin]]
name = "qantowallet"
path = "src/bin/qantowallet.rs"

[[bin]]
name = "saga_assistant"
path = "src/bin/saga_assistant.rs"

# --- Utility & Test Binaries ---
[[bin]]
name = "generate_wallet"
path = "src/bin/generate_wallet.rs"

[[bin]]
name = "import_wallet"
path = "src/bin/import_wallet.rs"

[[bin]]
name = "monitor"
path = "src/bin/monitor.rs"

[[bin]]
name = "omega_test"
path = "src/bin/omega_test.rs"

[[bin]]
name = "stress_test"
path = "src/bin/stress_test.rs"

[[bin]]
name = "metrics_server"
path = "src/bin/metrics_server.rs" 

# --- Build Profiles ---
[profile.release]
lto = true           # Enable Link-Time Optimization for whole-program optimization
codegen-units = 1    # Maximize optimization potential at the cost of compile time
strip = true         # Remove debugging symbols to reduce binary size
panic = "abort"      # Abort on panic for smaller and faster binaries
opt-level = 3

[profile.dev]
# Treat warnings as errors in development
rustflags = ["-D", "warnings"]
