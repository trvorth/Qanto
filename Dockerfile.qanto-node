FROM rustlang/rust:nightly-slim as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    build-essential \
    cmake \
    clang \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /usr/src/qanto

# Copy source code
COPY . .

# Remove existing lock files and update dependencies
RUN rm -f Cargo.lock myblockchain/Cargo.lock
RUN cargo update

# Build the application in release mode
RUN cargo build --release --bin qanto

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    && rm -rf /var/lib/apt/lists/*

# Create qanto user
RUN useradd -r -s /bin/false qanto

# Copy binary from builder stage
COPY --from=builder /usr/src/qanto/target/release/qanto /usr/local/bin/qanto

# Create data directory
RUN mkdir -p /var/lib/qanto/data && chown qanto:qanto /var/lib/qanto/data

# Switch to qanto user
USER qanto

# Expose ports
EXPOSE 30333 9933 9944 8080

# Set entrypoint
ENTRYPOINT ["/usr/local/bin/qanto"]
CMD ["--data-dir", "/var/lib/qanto/data", "--rpc-external", "--ws-external", "--rpc-cors", "all"]
